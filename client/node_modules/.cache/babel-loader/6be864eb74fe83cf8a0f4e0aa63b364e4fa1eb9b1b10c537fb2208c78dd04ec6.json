{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saria\\\\Desktop\\\\Coding\\\\Sp33d\\\\client\\\\src\\\\components\\\\Bootstrap\\\\ModalFilter.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalFilter(props) {\n  _s();\n  const [selectedFilter, setSelectedFilter] = useState('');\n  const [category1, setCategory1] = useState('');\n  const [category2, setCategory2] = useState('');\n  const [queryResult, setQueryResult] = useState('');\n  const [expensive, setExpensive] = useState(false);\n  const [userX, setUserX] = useState('');\n  const [userY, setUserY] = useState('');\n  const handleFilterChange = event => {\n    setSelectedFilter(event.target.value);\n  };\n  const handleCategory1Change = event => {\n    setCategory1(event.target.value);\n  };\n  const handleCategory2Change = event => {\n    setCategory2(event.target.value);\n  };\n  const handleExpensiveChange = event => {\n    setExpensive(event.target.checked);\n  };\n  const handleUserXChange = event => {\n    setUserX(event.target.value);\n  };\n  const handleUserYChange = event => {\n    setUserY(event.target.value);\n  };\n  const handleFilter = () => {\n    // handle filter logic here based on state values\n  };\n  const handleSubmit = async () => {\n    let query = '';\n    switch (selectedFilter) {\n      case 'most-expensive':\n        query = `SELECT * FROM items i1 WHERE price = (\n                SELECT MAX(price) FROM items i2 WHERE i2.category = i1.category\n        )`;\n        break;\n      case 'two-items':\n        query = `SELECT DISTINCT u.username FROM users u\n                JOIN items i1 ON u.id = i1.user_id\n                JOIN items i2 ON u.id = i2.user_id AND i1.date_posted = i2.date_posted\n                WHERE i1.category = '${category1}' AND i2.category = '${category2}'`;\n        break;\n      case 'excellent-items':\n        query = `SELECT i.id, i.name, i.category, i.price, u.username, COUNT(*) as num_reviews\n                FROM items i JOIN users u ON i.user_id = u.id\n                JOIN reviews r ON i.id = r.item_id\n                WHERE u.username = 'userX' AND r.rating IN ('Excellent', 'Good')\n                GROUP BY i.id\n                HAVING COUNT(*) = SUM(r.rating = 'Excellent' OR r.rating = 'Good')`;\n        break;\n      case 'most-items':\n        query = `SELECT username, COUNT(*) AS num_items\n                FROM users JOIN items ON users.id = items.user_id\n                WHERE date_posted >= '2020-05-01'\n                GROUP BY username\n                ORDER BY num_items DESC\n                LIMIT 1`;\n        break;\n      case 'common-favorites':\n        query = `SELECT DISTINCT u.username FROM users u\n                JOIN favorites f1 ON u.id = f1.user_id AND f1.favorite_id IN (\n                  SELECT favorite_id FROM favorites WHERE user_id = 'userX'\n                )\n                JOIN favorites f2 ON u.id = f2.user_id AND f2.favorite_id IN (\n                  SELECT favorite_id FROM favorites WHERE user_id = 'userY'\n                )\n                WHERE u.id NOT IN ('userX', 'userY')`;\n        break;\n      case 'no-excellent-items':\n        query = `SELECT DISTINCT u.username FROM users u\n                JOIN items i ON u.id = i.user_id\n                JOIN reviews r ON i.id = r.item_id AND r.rating = 'Excellent'\n                GROUP BY u.username\n                HAVING COUNT(*) < 3`;\n        break;\n      case 'no-poor-reviews':\n        query = `SELECT DISTINCT u.username FROM users u\n                JOIN reviews r ON u.id = r.user_id AND r.rating = 'Poor'\n                WHERE u.id NOT IN (SELECT DISTINCT user_id FROM reviews WHERE rating != 'Poor')`;\n        break;\n      case 'only-poor-reviews':\n        query = `SELECT DISTINCT u.username FROM users u\n                    WHERE NOT EXISTS (\n                      SELECT * FROM comments c\n                      WHERE c.user_id = u.id AND c.rating != 'Poor'\n                    )`;\n        break;\n      case 'user-item-excellent-reviews':\n        query = `SELECT u1.username AS user_a, u2.username AS user_b, i.name, 'Excellent' AS rating\n                    FROM users u1\n                    INNER JOIN users u2 ON u1.id < u2.id\n                    INNER JOIN items i ON i.user_id = u1.id AND i.user_id = u2.id\n                    WHERE NOT EXISTS (\n                      SELECT * FROM comments c1\n                      WHERE c1.user_id = u1.id AND c1.item_id = i.id AND c1.rating != 'Excellent'\n                    ) AND NOT EXISTS (\n                      SELECT * FROM comments c2\n                      WHERE c2.user_id = u2.id AND c2.item_id = i.id AND c2.rating != 'Excellent'\n                    )`;\n        break;\n      case 'two-users-excellent-reviews':\n        query = `SELECT DISTINCT c1.user_id AS user_a, c2.user_id AS user_b\n                FROM comments c1\n                JOIN comments c2 ON c1.item_id = c2.item_id AND c1.user_id < c2.user_id\n                WHERE c1.rating = 'Excellent' AND c2.rating = 'Excellent'\n                GROUP BY c1.user_id, c2.user_id\n                HAVING COUNT(*) = (\n                  SELECT COUNT(*) FROM items i WHERE i.user_id = c1.user_id OR i.user_id = c2.user_id\n                )`;\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <Modal\n    //   {...props}\n    //   size=\"lg\"\n    //   aria-labelledby=\"contained-modal-title-vcenter\"\n    //   centered\n    // >\n    //   <Modal.Header closeButton>\n    //     <Modal.Title id=\"contained-modal-title-vcenter\">\n    //       Filter: Select one of the following\n    //     </Modal.Title>\n    //   </Modal.Header>\n    //   <Modal.Body>\n    //     <form>\n    //       <input type='radio' id='expensive' />\n    //       <label htmlFor='expensive'>- Most Expensive Item in Each Category</label>\n    //       <br></br>\n    //       <input type='radio' id='two-items' />\n    //       <label htmlFor='two-items'>\n    //         - users who posted at least two items on the same day with\n    //         <span><br />Category 1:</span>\n    //         <select id='category-select'>\n    //           <option value=\"-1\"></option>\n    //           <option value=\"Sedan\">Sedan</option>\n    //           <option value=\"SUV\">SUV</option>\n    //           <option value=\"Convertible\">Convertible</option>\n    //           <option value=\"Sport\">Sport</option>\n    //           <option value=\"Retro\">Retro</option>\n    //         </select>\n    //         <span><br />Category 2:</span>\n    //         <select id='category-select'>\n    //           <option value=\"-1\"></option>\n    //           <option value=\"Sedan\">Sedan</option>\n    //           <option value=\"SUV\">SUV</option>\n    //           <option value=\"Convertible\">Convertible</option>\n    //           <option value=\"Sport\">Sport</option>\n    //           <option value=\"Retro\">Retro</option>\n    //         </select>\n    //         <br/>\n    //       </label>\n    //       <br></br>\n    //       <input type='radio' id='exc-good' />\n    //       <label htmlFor='exc-good'>\n    //         - items with comments that are excellent or good by user:\n    //         <input type='text' placeholder='enter a user'></input>\n    //       </label>\n    //       <br></br>\n    //       <input type='radio' id='exc-good' />\n    //       <label htmlFor='exc-good'>- items with comments that are excellent or good</label>\n    //       <br></br>\n    //     </form>\n    //   </Modal.Body>\n    //   <Modal.Footer>\n    //     <Button onClick={props.onHide}>Close</Button>\n    //     <Button onClick={props.onHide}>Submit</Button>\n    //   </Modal.Footer>\n    // </Modal>\n    _jsxDEV(Modal, {\n      ...props,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Filter Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formExpensive\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"List the most expensive items in each category\",\n            checked: expensive,\n            onChange: handleExpensiveChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formCategory1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"1- List the users who posted at least two items on the same day with Category 1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Category 1\",\n            value: category1,\n            onChange: handleCategory1Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formCategory2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"2-List the users who posted at least two items on the same day with Category 2:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Category 2\",\n            value: category2,\n            onChange: handleCategory2Change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formUserX\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"3-List all the items posted by user X, such that all the comments are \\\"Excellent\\\" or \\\"good\\\" for these items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter User X\",\n            value: userX,\n            onChange: handleUserXChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formUserY\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"List the other users who are favorited by both users X, and Y:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter User Y\",\n            value: userY,\n            onChange: handleUserYChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: props.onHide,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleFilter,\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(ModalFilter, \"LTrnd4f4E/Y0adJk1njpuXBfTIY=\");\n_c = ModalFilter;\nexport default ModalFilter;\nvar _c;\n$RefreshReg$(_c, \"ModalFilter\");","map":{"version":3,"names":["Button","Modal","Form","React","useState","Axios","jsxDEV","_jsxDEV","ModalFilter","props","_s","selectedFilter","setSelectedFilter","category1","setCategory1","category2","setCategory2","queryResult","setQueryResult","expensive","setExpensive","userX","setUserX","userY","setUserY","handleFilterChange","event","target","value","handleCategory1Change","handleCategory2Change","handleExpensiveChange","checked","handleUserXChange","handleUserYChange","handleFilter","handleSubmit","query","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","controlId","Check","type","label","onChange","Label","Control","placeholder","Footer","variant","onClick","onHide","_c","$RefreshReg$"],"sources":["C:/Users/saria/Desktop/Coding/Sp33d/client/src/components/Bootstrap/ModalFilter.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport React, { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\nfunction ModalFilter(props) {\r\n\r\n  const [selectedFilter, setSelectedFilter] = useState('');\r\n  const [category1, setCategory1] = useState('');\r\n  const [category2, setCategory2] = useState('');\r\n  const [queryResult, setQueryResult] = useState('');\r\n  const [expensive, setExpensive] = useState(false);\r\n  const [userX, setUserX] = useState('');\r\n  const [userY, setUserY] = useState('');\r\n\r\n  const handleFilterChange = (event) => {\r\n    setSelectedFilter(event.target.value);\r\n  };\r\n\r\n  const handleCategory1Change = (event) => {\r\n    setCategory1(event.target.value);\r\n  };\r\n\r\n  const handleCategory2Change = (event) => {\r\n    setCategory2(event.target.value);\r\n  };\r\n\r\n  const handleExpensiveChange = (event) => {\r\n    setExpensive(event.target.checked);\r\n  };\r\n\r\n  const handleUserXChange = (event) => {\r\n    setUserX(event.target.value);\r\n  };\r\n\r\n  const handleUserYChange = (event) => {\r\n    setUserY(event.target.value);\r\n  };\r\n\r\n  const handleFilter = () => {\r\n    // handle filter logic here based on state values\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    let query = '';\r\n    switch (selectedFilter) {\r\n      case 'most-expensive':\r\n        query = `SELECT * FROM items i1 WHERE price = (\r\n                SELECT MAX(price) FROM items i2 WHERE i2.category = i1.category\r\n        )`;\r\n        break;\r\n      case 'two-items':\r\n        query = `SELECT DISTINCT u.username FROM users u\r\n                JOIN items i1 ON u.id = i1.user_id\r\n                JOIN items i2 ON u.id = i2.user_id AND i1.date_posted = i2.date_posted\r\n                WHERE i1.category = '${category1}' AND i2.category = '${category2}'`;\r\n        break;\r\n      case 'excellent-items':\r\n        query = `SELECT i.id, i.name, i.category, i.price, u.username, COUNT(*) as num_reviews\r\n                FROM items i JOIN users u ON i.user_id = u.id\r\n                JOIN reviews r ON i.id = r.item_id\r\n                WHERE u.username = 'userX' AND r.rating IN ('Excellent', 'Good')\r\n                GROUP BY i.id\r\n                HAVING COUNT(*) = SUM(r.rating = 'Excellent' OR r.rating = 'Good')`;\r\n        break;\r\n      case 'most-items':\r\n        query = `SELECT username, COUNT(*) AS num_items\r\n                FROM users JOIN items ON users.id = items.user_id\r\n                WHERE date_posted >= '2020-05-01'\r\n                GROUP BY username\r\n                ORDER BY num_items DESC\r\n                LIMIT 1`;\r\n        break;\r\n      case 'common-favorites':\r\n        query = `SELECT DISTINCT u.username FROM users u\r\n                JOIN favorites f1 ON u.id = f1.user_id AND f1.favorite_id IN (\r\n                  SELECT favorite_id FROM favorites WHERE user_id = 'userX'\r\n                )\r\n                JOIN favorites f2 ON u.id = f2.user_id AND f2.favorite_id IN (\r\n                  SELECT favorite_id FROM favorites WHERE user_id = 'userY'\r\n                )\r\n                WHERE u.id NOT IN ('userX', 'userY')`;\r\n        break;\r\n      case 'no-excellent-items':\r\n        query = `SELECT DISTINCT u.username FROM users u\r\n                JOIN items i ON u.id = i.user_id\r\n                JOIN reviews r ON i.id = r.item_id AND r.rating = 'Excellent'\r\n                GROUP BY u.username\r\n                HAVING COUNT(*) < 3`;\r\n        break;\r\n      case 'no-poor-reviews':\r\n        query = `SELECT DISTINCT u.username FROM users u\r\n                JOIN reviews r ON u.id = r.user_id AND r.rating = 'Poor'\r\n                WHERE u.id NOT IN (SELECT DISTINCT user_id FROM reviews WHERE rating != 'Poor')`;\r\n        break;\r\n      case 'only-poor-reviews':\r\n        query = `SELECT DISTINCT u.username FROM users u\r\n                    WHERE NOT EXISTS (\r\n                      SELECT * FROM comments c\r\n                      WHERE c.user_id = u.id AND c.rating != 'Poor'\r\n                    )`;\r\n        break;\r\n      case 'user-item-excellent-reviews':\r\n        query = `SELECT u1.username AS user_a, u2.username AS user_b, i.name, 'Excellent' AS rating\r\n                    FROM users u1\r\n                    INNER JOIN users u2 ON u1.id < u2.id\r\n                    INNER JOIN items i ON i.user_id = u1.id AND i.user_id = u2.id\r\n                    WHERE NOT EXISTS (\r\n                      SELECT * FROM comments c1\r\n                      WHERE c1.user_id = u1.id AND c1.item_id = i.id AND c1.rating != 'Excellent'\r\n                    ) AND NOT EXISTS (\r\n                      SELECT * FROM comments c2\r\n                      WHERE c2.user_id = u2.id AND c2.item_id = i.id AND c2.rating != 'Excellent'\r\n                    )`;\r\n        break;\r\n      case 'two-users-excellent-reviews':\r\n        query = `SELECT DISTINCT c1.user_id AS user_a, c2.user_id AS user_b\r\n                FROM comments c1\r\n                JOIN comments c2 ON c1.item_id = c2.item_id AND c1.user_id < c2.user_id\r\n                WHERE c1.rating = 'Excellent' AND c2.rating = 'Excellent'\r\n                GROUP BY c1.user_id, c2.user_id\r\n                HAVING COUNT(*) = (\r\n                  SELECT COUNT(*) FROM items i WHERE i.user_id = c1.user_id OR i.user_id = c2.user_id\r\n                )`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    // <Modal\r\n    //   {...props}\r\n    //   size=\"lg\"\r\n    //   aria-labelledby=\"contained-modal-title-vcenter\"\r\n    //   centered\r\n    // >\r\n    //   <Modal.Header closeButton>\r\n    //     <Modal.Title id=\"contained-modal-title-vcenter\">\r\n    //       Filter: Select one of the following\r\n    //     </Modal.Title>\r\n    //   </Modal.Header>\r\n    //   <Modal.Body>\r\n    //     <form>\r\n    //       <input type='radio' id='expensive' />\r\n    //       <label htmlFor='expensive'>- Most Expensive Item in Each Category</label>\r\n    //       <br></br>\r\n    //       <input type='radio' id='two-items' />\r\n    //       <label htmlFor='two-items'>\r\n    //         - users who posted at least two items on the same day with\r\n    //         <span><br />Category 1:</span>\r\n    //         <select id='category-select'>\r\n    //           <option value=\"-1\"></option>\r\n    //           <option value=\"Sedan\">Sedan</option>\r\n    //           <option value=\"SUV\">SUV</option>\r\n    //           <option value=\"Convertible\">Convertible</option>\r\n    //           <option value=\"Sport\">Sport</option>\r\n    //           <option value=\"Retro\">Retro</option>\r\n    //         </select>\r\n    //         <span><br />Category 2:</span>\r\n    //         <select id='category-select'>\r\n    //           <option value=\"-1\"></option>\r\n    //           <option value=\"Sedan\">Sedan</option>\r\n    //           <option value=\"SUV\">SUV</option>\r\n    //           <option value=\"Convertible\">Convertible</option>\r\n    //           <option value=\"Sport\">Sport</option>\r\n    //           <option value=\"Retro\">Retro</option>\r\n    //         </select>\r\n    //         <br/>\r\n    //       </label>\r\n    //       <br></br>\r\n    //       <input type='radio' id='exc-good' />\r\n    //       <label htmlFor='exc-good'>\r\n    //         - items with comments that are excellent or good by user:\r\n    //         <input type='text' placeholder='enter a user'></input>\r\n    //       </label>\r\n    //       <br></br>\r\n    //       <input type='radio' id='exc-good' />\r\n    //       <label htmlFor='exc-good'>- items with comments that are excellent or good</label>\r\n    //       <br></br>\r\n    //     </form>\r\n    //   </Modal.Body>\r\n    //   <Modal.Footer>\r\n    //     <Button onClick={props.onHide}>Close</Button>\r\n    //     <Button onClick={props.onHide}>Submit</Button>\r\n    //   </Modal.Footer>\r\n    // </Modal>\r\n\r\n    <Modal {...props} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Filter Options</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group controlId=\"formExpensive\">\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"List the most expensive items in each category\"\r\n            checked={expensive}\r\n            onChange={handleExpensiveChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formCategory1\">\r\n          <Form.Label>1- List the users who posted at least two items on the same day with Category 1:</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Category 1\" value={category1} onChange={handleCategory1Change} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formCategory2\">\r\n          <Form.Label>2-List the users who posted at least two items on the same day with Category 2:</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Category 2\" value={category2} onChange={handleCategory2Change} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formUserX\">\r\n          <Form.Label>3-List all the items posted by user X, such that all the comments are &quot;Excellent&quot; or &quot;good&quot; for these items:</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter User X\" value={userX} onChange={handleUserXChange} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formUserY\">\r\n          <Form.Label>List the other users who are favorited by both users X, and Y:</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter User Y\" value={userY} onChange={handleUserYChange} />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.onHide}>Cancel</Button>\r\n        <Button variant=\"primary\" onClick={handleFilter}>Filter</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalFilter;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMqB,kBAAkB,GAAIC,KAAK,IAAK;IACpCd,iBAAiB,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,qBAAqB,GAAIH,KAAK,IAAK;IACvCZ,YAAY,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAME,qBAAqB,GAAIJ,KAAK,IAAK;IACvCV,YAAY,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMG,qBAAqB,GAAIL,KAAK,IAAK;IACvCN,YAAY,CAACM,KAAK,CAACC,MAAM,CAACK,OAAO,CAAC;EACpC,CAAC;EAED,MAAMC,iBAAiB,GAAIP,KAAK,IAAK;IACnCJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMM,iBAAiB,GAAIR,KAAK,IAAK;IACnCF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB;EAAA,CACD;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,KAAK,GAAG,EAAE;IACd,QAAQ1B,cAAc;MACpB,KAAK,gBAAgB;QACnB0B,KAAK,GAAI;AACjB;AACA,UAAU;QACF;MACF,KAAK,WAAW;QACdA,KAAK,GAAI;AACjB;AACA;AACA,uCAAuCxB,SAAU,wBAAuBE,SAAU,GAAE;QAC5E;MACF,KAAK,iBAAiB;QACpBsB,KAAK,GAAI;AACjB;AACA;AACA;AACA;AACA,mFAAmF;QAC3E;MACF,KAAK,YAAY;QACfA,KAAK,GAAI;AACjB;AACA;AACA;AACA;AACA,wBAAwB;QAChB;MACF,KAAK,kBAAkB;QACrBA,KAAK,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;QAC7C;MACF,KAAK,oBAAoB;QACvBA,KAAK,GAAI;AACjB;AACA;AACA;AACA,oCAAoC;QAC5B;MACF,KAAK,iBAAiB;QACpBA,KAAK,GAAI;AACjB;AACA,gGAAgG;QACxF;MACF,KAAK,mBAAmB;QACtBA,KAAK,GAAI;AACjB;AACA;AACA;AACA,sBAAsB;QACd;MACF,KAAK,6BAA6B;QAChCA,KAAK,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;QACd;MACF,KAAK,6BAA6B;QAChCA,KAAK,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;QACV;MACF;QACE;IAAM;EAEZ,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;I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"},"metadata":{},"sourceType":"module","externalDependencies":[]}