{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saria\\\\Desktop\\\\Coding\\\\Sp33d\\\\client\\\\src\\\\components\\\\Bootstrap\\\\GridCards.js\",\n  _s = $RefreshSig$();\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from 'axios';\nimport UserContext from \"../../Contexts/UserContext\";\n// import './ItemParts.css'\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GridCards() {\n  _s();\n  const [data, setData] = useState([]);\n  const {\n    setTitle,\n    title,\n    category,\n    setItemId,\n    profileUser,\n    setProfileUser\n  } = useContext(UserContext);\n  useEffect(() => {\n    if (true) {\n      Axios.get(\"http://localhost:3001/searchedItem\", {\n        params: {\n          category: category\n        }\n      }).then(response => {\n        // console.log(\"setTitle \",title)\n        console.log(response.data);\n        setData(response.data.data);\n        console.log(response);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n    console.log(setTitle);\n  }, []);\n  const handleTitleClick = test => {\n    setTitle(test);\n    console.log(title);\n  };\n  const handleUserClick = test => {\n    setProfileUser(test);\n    console.log(profileUser);\n  };\n  const handleLinkClick = event => {\n    if (title == null || title == \"\") {\n      event.preventDefault(); // stop navigation to /homepage page\n      // alert('Please Enter an Existing Username and Password');\n    }\n  };\n\n  const linkUser = event => {\n    if (profileUser == null || profileUser == \"\") {\n      event.preventDefault(); // stop navigation to /homepage page\n      // alert('Please Enter an Existing Username and Password');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    xs: 1,\n    md: 3,\n    className: \"g-4\",\n    children: data ? data.length > 0 ? data.map(item => /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"info\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: handleLinkClick,\n                to: \"/itemPage\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => {\n                    handleTitleClick(item.title);\n                    setItemId(item.id);\n                  },\n                  children: [\"Title: \", item.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Description: \", item.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Category: \", item.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Price: \", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: linkUser,\n              to: \"/profile\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => {\n                  handleUserClick(item.user_id);\n                },\n                children: [\"User: \", item.user_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [\"Created: \", item.created_at.slice(0, 10)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"No items found with category of \", category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(GridCards, \"AzLHTH/bRBpNY1LhRSW76wNOUts=\");\n_c = GridCards;\nexport default GridCards;\nvar _c;\n$RefreshReg$(_c, \"GridCards\");","map":{"version":3,"names":["Card","Col","Row","React","useEffect","useState","useContext","Axios","UserContext","Link","jsxDEV","_jsxDEV","GridCards","_s","data","setData","setTitle","title","category","setItemId","profileUser","setProfileUser","get","params","then","response","console","log","catch","error","handleTitleClick","test","handleUserClick","handleLinkClick","event","preventDefault","linkUser","xs","md","className","children","length","map","item","border","Body","Title","Header","onClick","to","id","fileName","_jsxFileName","lineNumber","columnNumber","Text","description","price","user_id","Footer","created_at","slice","_c","$RefreshReg$"],"sources":["C:/Users/saria/Desktop/Coding/Sp33d/client/src/components/Bootstrap/GridCards.js"],"sourcesContent":["import Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from 'axios';\r\nimport UserContext from \"../../Contexts/UserContext\";\r\n// import './ItemParts.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction GridCards() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const { setTitle, title, category, setItemId, profileUser, setProfileUser} = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        if (true) {\r\n            Axios.get(\"http://localhost:3001/searchedItem\", {params: {category: category}})\r\n            .then((response) => {\r\n                // console.log(\"setTitle \",title)\r\n                console.log(response.data);\r\n                setData(response.data.data);\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n        }\r\n        console.log(setTitle)\r\n    }, []);\r\n\r\n    const handleTitleClick = (test) =>{\r\n        setTitle(test);\r\n        console.log(title);\r\n    }\r\n\r\n    const handleUserClick = (test) =>{\r\n        setProfileUser(test);\r\n        console.log(profileUser);\r\n    }\r\n\r\n    const handleLinkClick = (event) => {\r\n        if (title == null || title == \"\") {\r\n            event.preventDefault(); // stop navigation to /homepage page\r\n            // alert('Please Enter an Existing Username and Password');\r\n        }\r\n    }\r\n\r\n    const linkUser = (event) => {\r\n        if (profileUser == null || profileUser == \"\") {\r\n            event.preventDefault(); // stop navigation to /homepage page\r\n            // alert('Please Enter an Existing Username and Password');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row xs={1} md={3} className=\"g-4\">\r\n            {data ? (\r\n                data.length > 0 ? (\r\n                    data.map((item) => (\r\n                        <Col key={item.id}>\r\n                            <Card border='info'>\r\n                                {/* <Card.Img variant=\"top\" src=\"holder.js/100px160\" alt='item image unavailable or unable to load'/> */}\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        <Card.Header>\r\n                                            <Link onClick={handleLinkClick} to=\"/itemPage\">\r\n                                                <a onClick={() => {\r\n                                                    handleTitleClick(item.title);\r\n                                                    setItemId(item.id);\r\n                                                }}\r\n                                                >\r\n                                                    Title: {item.title}\r\n                                                </a>\r\n                                            </Link>\r\n                                        </Card.Header>\r\n                                    </Card.Title>\r\n                                    <Card.Text>\r\n                                        Description: {item.description}\r\n                                    </Card.Text>\r\n                                    <Card.Text>\r\n                                        Category: {item.category}\r\n                                    </Card.Text>\r\n                                    <Card.Text>\r\n                                        Price: {item.price}\r\n                                    </Card.Text>\r\n                                    <Card.Text>\r\n                                        <Link onClick={linkUser} to=\"/profile\">\r\n                                            <a onClick={() => {\r\n                                                handleUserClick(item.user_id);\r\n                                            }}\r\n                                            >\r\n                                                User: {item.user_id}\r\n                                            </a>\r\n                                        </Link>\r\n                                    </Card.Text>\r\n                                    <Card.Footer>\r\n                                        <small className=\"text-muted\">\r\n                                            Created: {item.created_at.slice(0,10)}\r\n                                        </small>\r\n                                    </Card.Footer>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))\r\n                ) : (\r\n                    <h1>No items found with category of {category}</h1>\r\n                )\r\n            ) : (\r\n                <h1>Loading...</h1>\r\n            )}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default GridCards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}